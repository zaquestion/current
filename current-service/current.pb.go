// Code generated by protoc-gen-go. DO NOT EDIT.
// source: current.proto

/*
Package current is a generated protocol buffer package.

It is generated from these files:
	current.proto

It has these top-level messages:
	PostLocationBigBrotherRequest
	PostLocationTaskerRequest
	Error
	GetLocationRequest
	Location
*/
package current

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/TuneLab/go-truss/deftree/googlethirdparty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PostLocationBigBrotherRequest struct {
	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude" json:"longitude,omitempty"`
	Accuracy  float64 `protobuf:"fixed64,3,opt,name=accuracy" json:"accuracy,omitempty"`
	Altitude  float64 `protobuf:"fixed64,4,opt,name=altitude" json:"altitude,omitempty"`
	Bearing   float64 `protobuf:"fixed64,5,opt,name=bearing" json:"bearing,omitempty"`
	Speed     float64 `protobuf:"fixed64,6,opt,name=speed" json:"speed,omitempty"`
	Battlevel int32   `protobuf:"varint,7,opt,name=battlevel" json:"battlevel,omitempty"`
	Time      string  `protobuf:"bytes,8,opt,name=time" json:"time,omitempty"`
}

func (m *PostLocationBigBrotherRequest) Reset()                    { *m = PostLocationBigBrotherRequest{} }
func (m *PostLocationBigBrotherRequest) String() string            { return proto.CompactTextString(m) }
func (*PostLocationBigBrotherRequest) ProtoMessage()               {}
func (*PostLocationBigBrotherRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PostLocationBigBrotherRequest) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *PostLocationBigBrotherRequest) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *PostLocationBigBrotherRequest) GetAccuracy() float64 {
	if m != nil {
		return m.Accuracy
	}
	return 0
}

func (m *PostLocationBigBrotherRequest) GetAltitude() float64 {
	if m != nil {
		return m.Altitude
	}
	return 0
}

func (m *PostLocationBigBrotherRequest) GetBearing() float64 {
	if m != nil {
		return m.Bearing
	}
	return 0
}

func (m *PostLocationBigBrotherRequest) GetSpeed() float64 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *PostLocationBigBrotherRequest) GetBattlevel() int32 {
	if m != nil {
		return m.Battlevel
	}
	return 0
}

func (m *PostLocationBigBrotherRequest) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

type PostLocationTaskerRequest struct {
	Location []float64 `protobuf:"fixed64,1,rep,packed,name=location" json:"location,omitempty"`
	Speed    float64   `protobuf:"fixed64,2,opt,name=speed" json:"speed,omitempty"`
	Battery  int32     `protobuf:"varint,3,opt,name=battery" json:"battery,omitempty"`
	Charging bool      `protobuf:"varint,4,opt,name=charging" json:"charging,omitempty"`
	Time     string    `protobuf:"bytes,5,opt,name=time" json:"time,omitempty"`
}

func (m *PostLocationTaskerRequest) Reset()                    { *m = PostLocationTaskerRequest{} }
func (m *PostLocationTaskerRequest) String() string            { return proto.CompactTextString(m) }
func (*PostLocationTaskerRequest) ProtoMessage()               {}
func (*PostLocationTaskerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PostLocationTaskerRequest) GetLocation() []float64 {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *PostLocationTaskerRequest) GetSpeed() float64 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *PostLocationTaskerRequest) GetBattery() int32 {
	if m != nil {
		return m.Battery
	}
	return 0
}

func (m *PostLocationTaskerRequest) GetCharging() bool {
	if m != nil {
		return m.Charging
	}
	return false
}

func (m *PostLocationTaskerRequest) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

type Error struct {
	Err string `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Error) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type GetLocationRequest struct {
}

func (m *GetLocationRequest) Reset()                    { *m = GetLocationRequest{} }
func (m *GetLocationRequest) String() string            { return proto.CompactTextString(m) }
func (*GetLocationRequest) ProtoMessage()               {}
func (*GetLocationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Location struct {
	Latitude    float64 `protobuf:"fixed64,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude   float64 `protobuf:"fixed64,2,opt,name=longitude" json:"longitude,omitempty"`
	Speed       float64 `protobuf:"fixed64,3,opt,name=speed" json:"speed,omitempty"`
	Battery     int32   `protobuf:"varint,4,opt,name=battery" json:"battery,omitempty"`
	Charging    bool    `protobuf:"varint,5,opt,name=charging" json:"charging,omitempty"`
	LastUpdated string  `protobuf:"bytes,6,opt,name=last_updated,json=lastUpdated" json:"last_updated,omitempty"`
	Err         string  `protobuf:"bytes,7,opt,name=err" json:"err,omitempty"`
}

func (m *Location) Reset()                    { *m = Location{} }
func (m *Location) String() string            { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()               {}
func (*Location) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Location) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Location) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *Location) GetSpeed() float64 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *Location) GetBattery() int32 {
	if m != nil {
		return m.Battery
	}
	return 0
}

func (m *Location) GetCharging() bool {
	if m != nil {
		return m.Charging
	}
	return false
}

func (m *Location) GetLastUpdated() string {
	if m != nil {
		return m.LastUpdated
	}
	return ""
}

func (m *Location) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*PostLocationBigBrotherRequest)(nil), "current.PostLocationBigBrotherRequest")
	proto.RegisterType((*PostLocationTaskerRequest)(nil), "current.PostLocationTaskerRequest")
	proto.RegisterType((*Error)(nil), "current.Error")
	proto.RegisterType((*GetLocationRequest)(nil), "current.GetLocationRequest")
	proto.RegisterType((*Location)(nil), "current.Location")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Current service

type CurrentClient interface {
	PostLocationBigBrother(ctx context.Context, in *PostLocationBigBrotherRequest, opts ...grpc.CallOption) (*Error, error)
	PostLocationTasker(ctx context.Context, in *PostLocationTaskerRequest, opts ...grpc.CallOption) (*Error, error)
	GetLocation(ctx context.Context, in *GetLocationRequest, opts ...grpc.CallOption) (*Location, error)
}

type currentClient struct {
	cc *grpc.ClientConn
}

func NewCurrentClient(cc *grpc.ClientConn) CurrentClient {
	return &currentClient{cc}
}

func (c *currentClient) PostLocationBigBrother(ctx context.Context, in *PostLocationBigBrotherRequest, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := grpc.Invoke(ctx, "/current.Current/PostLocationBigBrother", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *currentClient) PostLocationTasker(ctx context.Context, in *PostLocationTaskerRequest, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := grpc.Invoke(ctx, "/current.Current/PostLocationTasker", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *currentClient) GetLocation(ctx context.Context, in *GetLocationRequest, opts ...grpc.CallOption) (*Location, error) {
	out := new(Location)
	err := grpc.Invoke(ctx, "/current.Current/GetLocation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Current service

type CurrentServer interface {
	PostLocationBigBrother(context.Context, *PostLocationBigBrotherRequest) (*Error, error)
	PostLocationTasker(context.Context, *PostLocationTaskerRequest) (*Error, error)
	GetLocation(context.Context, *GetLocationRequest) (*Location, error)
}

func RegisterCurrentServer(s *grpc.Server, srv CurrentServer) {
	s.RegisterService(&_Current_serviceDesc, srv)
}

func _Current_PostLocationBigBrother_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostLocationBigBrotherRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CurrentServer).PostLocationBigBrother(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/current.Current/PostLocationBigBrother",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CurrentServer).PostLocationBigBrother(ctx, req.(*PostLocationBigBrotherRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Current_PostLocationTasker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostLocationTaskerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CurrentServer).PostLocationTasker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/current.Current/PostLocationTasker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CurrentServer).PostLocationTasker(ctx, req.(*PostLocationTaskerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Current_GetLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CurrentServer).GetLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/current.Current/GetLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CurrentServer).GetLocation(ctx, req.(*GetLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Current_serviceDesc = grpc.ServiceDesc{
	ServiceName: "current.Current",
	HandlerType: (*CurrentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PostLocationBigBrother",
			Handler:    _Current_PostLocationBigBrother_Handler,
		},
		{
			MethodName: "PostLocationTasker",
			Handler:    _Current_PostLocationTasker_Handler,
		},
		{
			MethodName: "GetLocation",
			Handler:    _Current_GetLocation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "current.proto",
}

func init() { proto.RegisterFile("current.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 493 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xd5, 0x26, 0x71, 0x1d, 0x6f, 0x00, 0xb5, 0xab, 0x50, 0xb9, 0x69, 0x91, 0x82, 0x0f, 0x28,
	0x42, 0x22, 0x96, 0xe0, 0xc6, 0xb1, 0x08, 0xb8, 0xf4, 0x50, 0x59, 0xe5, 0x8c, 0xd6, 0xf6, 0xb0,
	0xb1, 0x70, 0xbd, 0x61, 0x3c, 0x46, 0xea, 0x95, 0x5f, 0xe0, 0xc0, 0x7f, 0xf0, 0x0f, 0x7c, 0x01,
	0xbf, 0xc0, 0x1f, 0xf0, 0x03, 0xc8, 0xeb, 0xf5, 0x26, 0x25, 0x0d, 0x17, 0x6e, 0x7e, 0xef, 0x79,
	0x66, 0xde, 0xf3, 0x8c, 0xf9, 0xfd, 0xac, 0x41, 0x84, 0x8a, 0x96, 0x6b, 0xd4, 0xa4, 0x85, 0x6f,
	0xe1, 0xec, 0x8d, 0x2a, 0x68, 0xd5, 0xa4, 0xcb, 0x4c, 0x5f, 0xc7, 0x57, 0x4d, 0x05, 0x17, 0x32,
	0x8d, 0x95, 0x7e, 0x46, 0xd8, 0xd4, 0x75, 0x9c, 0xc3, 0x07, 0x42, 0x80, 0x58, 0x69, 0xad, 0x4a,
	0xa0, 0x55, 0x81, 0xf9, 0x5a, 0x22, 0xdd, 0xc4, 0xb2, 0xaa, 0x34, 0x49, 0x2a, 0x74, 0x55, 0x77,
	0x0d, 0xa3, 0xdf, 0x8c, 0x3f, 0xba, 0xd4, 0x35, 0x5d, 0xe8, 0xcc, 0xf0, 0xe7, 0x85, 0x3a, 0x47,
	0x4d, 0x2b, 0xc0, 0x04, 0x3e, 0x35, 0x50, 0x93, 0x98, 0xf1, 0x71, 0x29, 0xa9, 0xa0, 0x26, 0x87,
	0x90, 0xcd, 0xd9, 0x82, 0x25, 0x0e, 0x8b, 0x33, 0x1e, 0x94, 0xba, 0x52, 0x9d, 0x38, 0x30, 0xe2,
	0x86, 0x68, 0x2b, 0x65, 0x96, 0x35, 0x28, 0xb3, 0x9b, 0x70, 0xd8, 0x55, 0xf6, 0xd8, 0x68, 0xa5,
	0xed, 0x3a, 0xb2, 0x9a, 0xc5, 0x22, 0xe4, 0x7e, 0x0a, 0x12, 0x8b, 0x4a, 0x85, 0x9e, 0x91, 0x7a,
	0x28, 0xa6, 0xdc, 0xab, 0xd7, 0x00, 0x79, 0x78, 0x60, 0xf8, 0x0e, 0xb4, 0x2e, 0x52, 0x49, 0x54,
	0xc2, 0x67, 0x28, 0x43, 0x7f, 0xce, 0x16, 0x5e, 0xb2, 0x21, 0x84, 0xe0, 0x23, 0x2a, 0xae, 0x21,
	0x1c, 0xcf, 0xd9, 0x22, 0x48, 0xcc, 0x73, 0xf4, 0x8d, 0xf1, 0x93, 0xed, 0xd4, 0x57, 0xb2, 0xfe,
	0x78, 0x3b, 0xb1, 0x15, 0x42, 0x36, 0x1f, 0x9a, 0xc4, 0x16, 0x6f, 0x1c, 0x0c, 0xb6, 0x1d, 0xb4,
	0x8e, 0x25, 0x11, 0x60, 0x17, 0xd4, 0x4b, 0x7a, 0xd8, 0xf6, 0xca, 0x56, 0x12, 0x55, 0x1b, 0xa6,
	0xcd, 0x39, 0x4e, 0x1c, 0x76, 0xce, 0xbc, 0x2d, 0x67, 0x27, 0xdc, 0x7b, 0x8d, 0xa8, 0x51, 0x1c,
	0xf2, 0x21, 0x20, 0x9a, 0x2f, 0x1e, 0x24, 0xed, 0x63, 0x34, 0xe5, 0xe2, 0x2d, 0x38, 0xcb, 0xd6,
	0x6c, 0xf4, 0x83, 0xf1, 0x71, 0xcf, 0xfd, 0xc7, 0xae, 0x5c, 0xae, 0xe1, 0x9e, 0x5c, 0xa3, 0xfd,
	0xb9, 0xbc, 0xbf, 0x72, 0x3d, 0xe6, 0xf7, 0x4a, 0x59, 0xd3, 0xfb, 0x66, 0x9d, 0x4b, 0xb2, 0xcb,
	0x0a, 0x92, 0x49, 0xcb, 0xbd, 0xeb, 0xa8, 0x3e, 0x9d, 0xef, 0xd2, 0x3d, 0xff, 0x3e, 0xe0, 0xfe,
	0xab, 0xee, 0xb8, 0x45, 0xc5, 0x8f, 0xef, 0xbe, 0x49, 0xf1, 0x64, 0xd9, 0xff, 0x0f, 0xff, 0x3c,
	0xda, 0xd9, 0x03, 0xf7, 0x9e, 0xf9, 0x9a, 0xd1, 0xd9, 0x97, 0x9f, 0xbf, 0xbe, 0x0e, 0x8e, 0xa3,
	0x69, 0xdc, 0x6f, 0x32, 0x4e, 0x0b, 0x95, 0xda, 0xae, 0xc0, 0xc5, 0xee, 0x35, 0x88, 0xe8, 0xce,
	0x59, 0xb7, 0x4e, 0x65, 0x67, 0xce, 0xa9, 0x99, 0xf3, 0x30, 0x3a, 0xdc, 0xcc, 0x21, 0x53, 0xf0,
	0x92, 0x3d, 0x15, 0x97, 0x7c, 0xb2, 0xb5, 0x40, 0x71, 0xea, 0x6a, 0x77, 0xd7, 0x3a, 0x3b, 0x72,
	0x62, 0xaf, 0x44, 0x47, 0xa6, 0xf7, 0x44, 0x04, 0xae, 0x77, 0x7a, 0x60, 0x7e, 0xe2, 0x17, 0x7f,
	0x02, 0x00, 0x00, 0xff, 0xff, 0x68, 0xdc, 0x0a, 0xa4, 0x26, 0x04, 0x00, 0x00,
}
