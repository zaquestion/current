// Code generated by protoc-gen-go.
// source: current.proto
// DO NOT EDIT!

/*
Package current is a generated protocol buffer package.

It is generated from these files:
	current.proto

It has these top-level messages:
	PostLocationFromBigBrotherRequest
	PostLocationFromBigBrotherReply
	GetLocationRequest
	GetLocationReply
*/
package current

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/zaquestion/current/service/DONOTEDIT/third_party/googleapis/google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PostLocationFromBigBrotherRequest struct {
	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude" json:"longitude,omitempty"`
	Accuracy  float64 `protobuf:"fixed64,3,opt,name=accuracy" json:"accuracy,omitempty"`
	Altitude  float64 `protobuf:"fixed64,4,opt,name=altitude" json:"altitude,omitempty"`
	Bearing   float64 `protobuf:"fixed64,5,opt,name=bearing" json:"bearing,omitempty"`
	Speed     float64 `protobuf:"fixed64,6,opt,name=speed" json:"speed,omitempty"`
}

func (m *PostLocationFromBigBrotherRequest) Reset()         { *m = PostLocationFromBigBrotherRequest{} }
func (m *PostLocationFromBigBrotherRequest) String() string { return proto.CompactTextString(m) }
func (*PostLocationFromBigBrotherRequest) ProtoMessage()    {}
func (*PostLocationFromBigBrotherRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0}
}

type PostLocationFromBigBrotherReply struct {
	Err string `protobuf:"bytes,2,opt,name=err" json:"err,omitempty"`
}

func (m *PostLocationFromBigBrotherReply) Reset()                    { *m = PostLocationFromBigBrotherReply{} }
func (m *PostLocationFromBigBrotherReply) String() string            { return proto.CompactTextString(m) }
func (*PostLocationFromBigBrotherReply) ProtoMessage()               {}
func (*PostLocationFromBigBrotherReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type GetLocationRequest struct {
}

func (m *GetLocationRequest) Reset()                    { *m = GetLocationRequest{} }
func (m *GetLocationRequest) String() string            { return proto.CompactTextString(m) }
func (*GetLocationRequest) ProtoMessage()               {}
func (*GetLocationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type GetLocationReply struct {
	Latitude  int64  `protobuf:"varint,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude int64  `protobuf:"varint,2,opt,name=longitude" json:"longitude,omitempty"`
	Err       string `protobuf:"bytes,3,opt,name=err" json:"err,omitempty"`
}

func (m *GetLocationReply) Reset()                    { *m = GetLocationReply{} }
func (m *GetLocationReply) String() string            { return proto.CompactTextString(m) }
func (*GetLocationReply) ProtoMessage()               {}
func (*GetLocationReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*PostLocationFromBigBrotherRequest)(nil), "current.PostLocationFromBigBrotherRequest")
	proto.RegisterType((*PostLocationFromBigBrotherReply)(nil), "current.PostLocationFromBigBrotherReply")
	proto.RegisterType((*GetLocationRequest)(nil), "current.GetLocationRequest")
	proto.RegisterType((*GetLocationReply)(nil), "current.GetLocationReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for CurrentService service

type CurrentServiceClient interface {
	PostLocationFromBigBrother(ctx context.Context, in *PostLocationFromBigBrotherRequest, opts ...grpc.CallOption) (*PostLocationFromBigBrotherReply, error)
	GetLocation(ctx context.Context, in *GetLocationRequest, opts ...grpc.CallOption) (*GetLocationReply, error)
}

type currentServiceClient struct {
	cc *grpc.ClientConn
}

func NewCurrentServiceClient(cc *grpc.ClientConn) CurrentServiceClient {
	return &currentServiceClient{cc}
}

func (c *currentServiceClient) PostLocationFromBigBrother(ctx context.Context, in *PostLocationFromBigBrotherRequest, opts ...grpc.CallOption) (*PostLocationFromBigBrotherReply, error) {
	out := new(PostLocationFromBigBrotherReply)
	err := grpc.Invoke(ctx, "/current.CurrentService/PostLocationFromBigBrother", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *currentServiceClient) GetLocation(ctx context.Context, in *GetLocationRequest, opts ...grpc.CallOption) (*GetLocationReply, error) {
	out := new(GetLocationReply)
	err := grpc.Invoke(ctx, "/current.CurrentService/GetLocation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CurrentService service

type CurrentServiceServer interface {
	PostLocationFromBigBrother(context.Context, *PostLocationFromBigBrotherRequest) (*PostLocationFromBigBrotherReply, error)
	GetLocation(context.Context, *GetLocationRequest) (*GetLocationReply, error)
}

func RegisterCurrentServiceServer(s *grpc.Server, srv CurrentServiceServer) {
	s.RegisterService(&_CurrentService_serviceDesc, srv)
}

func _CurrentService_PostLocationFromBigBrother_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostLocationFromBigBrotherRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CurrentServiceServer).PostLocationFromBigBrother(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/current.CurrentService/PostLocationFromBigBrother",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CurrentServiceServer).PostLocationFromBigBrother(ctx, req.(*PostLocationFromBigBrotherRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CurrentService_GetLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CurrentServiceServer).GetLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/current.CurrentService/GetLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CurrentServiceServer).GetLocation(ctx, req.(*GetLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CurrentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "current.CurrentService",
	HandlerType: (*CurrentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PostLocationFromBigBrother",
			Handler:    _CurrentService_PostLocationFromBigBrother_Handler,
		},
		{
			MethodName: "GetLocation",
			Handler:    _CurrentService_GetLocation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("current.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 337 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x52, 0xcd, 0x4a, 0xf3, 0x40,
	0x14, 0x25, 0xcd, 0xd7, 0xf6, 0xeb, 0x2d, 0x4a, 0xbd, 0x14, 0x89, 0xb1, 0xa0, 0x66, 0x55, 0x5c,
	0x34, 0x60, 0xdf, 0xa0, 0x82, 0x6e, 0x5c, 0x48, 0xdd, 0xb8, 0x12, 0x26, 0xe9, 0x25, 0x0e, 0x8c,
	0x99, 0x38, 0x99, 0x08, 0xdd, 0xfa, 0x04, 0x82, 0xcf, 0xe4, 0x13, 0xf8, 0x0a, 0xbe, 0x86, 0x20,
	0x99, 0x4c, 0x62, 0xfd, 0xab, 0xee, 0x72, 0xce, 0xb9, 0x67, 0xce, 0xcc, 0xb9, 0x81, 0x8d, 0xb8,
	0x50, 0x8a, 0x52, 0x3d, 0xc9, 0x94, 0xd4, 0x12, 0xbb, 0x16, 0xfa, 0xa3, 0x44, 0xca, 0x44, 0x50,
	0xc8, 0x32, 0x1e, 0xb2, 0x34, 0x95, 0x9a, 0x69, 0x2e, 0xd3, 0xbc, 0x1a, 0x0b, 0x9e, 0x1c, 0x38,
	0x38, 0x97, 0xb9, 0x3e, 0x93, 0xb1, 0xe1, 0x4f, 0x94, 0xbc, 0x99, 0xf1, 0x64, 0xa6, 0xa4, 0xbe,
	0x26, 0x35, 0xa7, 0xdb, 0x82, 0x72, 0x8d, 0x3e, 0xfc, 0x17, 0x4c, 0x73, 0x5d, 0x2c, 0xc8, 0x73,
	0xf6, 0x9d, 0xb1, 0x33, 0x6f, 0x30, 0x8e, 0xa0, 0x27, 0x64, 0x9a, 0x54, 0x62, 0xcb, 0x88, 0xef,
	0x44, 0xe9, 0x64, 0x71, 0x5c, 0x28, 0x16, 0x2f, 0x3d, 0xb7, 0x72, 0xd6, 0xd8, 0x68, 0xc2, 0x9e,
	0xfa, 0xcf, 0x6a, 0x16, 0xa3, 0x07, 0xdd, 0x88, 0x98, 0xe2, 0x69, 0xe2, 0xb5, 0x8d, 0x54, 0x43,
	0x1c, 0x42, 0x3b, 0xcf, 0x88, 0x16, 0x5e, 0xc7, 0xf0, 0x15, 0x08, 0xa6, 0xb0, 0xb7, 0xee, 0x19,
	0x99, 0x58, 0xe2, 0x00, 0x5c, 0x52, 0xca, 0x5c, 0xb1, 0x37, 0x2f, 0x3f, 0x83, 0x21, 0xe0, 0x29,
	0x35, 0x1e, 0xfb, 0xd8, 0xe0, 0x0a, 0x06, 0x1f, 0xd8, 0xd2, 0xfb, 0xb9, 0x00, 0x77, 0x5d, 0x01,
	0xee, 0x6a, 0x01, 0x36, 0xd5, 0x6d, 0x52, 0x8f, 0x5e, 0x1d, 0xd8, 0x3c, 0xae, 0x96, 0x73, 0x41,
	0xea, 0x8e, 0xc7, 0x84, 0x0f, 0x0e, 0xf8, 0x3f, 0x5f, 0x1f, 0x0f, 0x27, 0xf5, 0x6e, 0x7f, 0x5d,
	0x95, 0x3f, 0xfe, 0xd3, 0x6c, 0x26, 0x96, 0xc1, 0xe8, 0xfe, 0xf9, 0xe5, 0xb1, 0xb5, 0x8d, 0xc3,
	0x50, 0xd8, 0xa9, 0x30, 0xe2, 0x49, 0x64, 0x33, 0x2f, 0xa1, 0xbf, 0xd2, 0x02, 0xee, 0x36, 0xc7,
	0x7e, 0x6d, 0xcc, 0xdf, 0xf9, 0x5e, 0x2c, 0x43, 0xb6, 0x4c, 0x48, 0x1f, 0x7b, 0x4d, 0x48, 0xd4,
	0x31, 0x7f, 0xde, 0xf4, 0x2d, 0x00, 0x00, 0xff, 0xff, 0xe3, 0x4a, 0xb2, 0x8d, 0xb1, 0x02, 0x00,
	0x00,
}
